# Generated by Django 5.1.7 on 2025-05-30 12:22

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='OTPModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('otp', models.CharField(max_length=6)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('attempts', models.PositiveIntegerField(default=0)),
                ('blocked_until', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('first_name', models.CharField(help_text='Nome do usuário', max_length=50)),
                ('last_name', models.CharField(help_text='Sobrenome do usuário', max_length=50)),
                ('username', models.CharField(help_text='Nome de usuário único', max_length=50, unique=True)),
                ('email', models.EmailField(help_text='Email único do usuário', max_length=100, unique=True)),
                ('phone_number', models.CharField(blank=True, help_text='Número de telefone do usuário', max_length=12)),
                ('role', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Restaurante'), (2, 'Cliente'), (3, 'Administrador')], help_text='Papel do usuário no sistema', null=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True, help_text='Data de ingresso no sistema')),
                ('last_login', models.DateTimeField(auto_now_add=True, help_text='Data do último login')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, help_text='Data de criação do registro')),
                ('modified_date', models.DateTimeField(auto_now=True, help_text='Data da última modificação')),
                ('is_admin', models.BooleanField(default=False, help_text='Indica se o usuário é administrador')),
                ('is_staff', models.BooleanField(default=False, help_text='Indica se o usuário é membro da equipe')),
                ('is_active', models.BooleanField(default=False, help_text='Indica se o usuário está ativo')),
                ('is_superuser', models.BooleanField(default=False, help_text='Indica se o usuário é superusuário')),
                ('email_verified', models.BooleanField(default=False, help_text='Indica se o email foi verificado')),
                ('email_verification_token', models.CharField(blank=True, help_text='Token para verificação de email', max_length=100)),
                ('otp', models.CharField(blank=True, help_text='Código OTP para autenticação', max_length=6)),
                ('otp_created_at', models.DateTimeField(blank=True, help_text='Data de criação do OTP', null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_type', models.CharField(choices=[('HOME', 'Casa'), ('WORK', 'Trabalho'), ('OTHER', 'Outro')], default='HOME', help_text='Tipo de endereço (Casa, Trabalho, Outro)', max_length=10)),
                ('address_line1', models.CharField(help_text='Primeira linha do endereço (rua, número)', max_length=100)),
                ('address_line2', models.CharField(blank=True, default='', help_text='Segunda linha do endereço (complemento)', max_length=100)),
                ('city', models.CharField(help_text='Cidade', max_length=50)),
                ('state', models.CharField(help_text='Estado', max_length=50)),
                ('country', models.CharField(default='Brasil', help_text='País', max_length=50)),
                ('postal_code', models.CharField(help_text='CEP', max_length=10)),
                ('latitude', models.DecimalField(blank=True, decimal_places=15, help_text='Latitude da localização', max_digits=18, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=15, help_text='Longitude da localização', max_digits=18, null=True)),
                ('is_default', models.BooleanField(default=False, help_text='Indica se este é o endereço padrão do usuário')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Data de criação do endereço')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Data da última atualização do endereço')),
                ('user', models.ForeignKey(help_text='Usuário proprietário deste endereço', on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_picture', models.ImageField(blank=True, help_text='Foto de perfil do usuário', null=True, upload_to='users/profile_pictures')),
                ('cover_photo', models.ImageField(blank=True, help_text='Foto de capa do perfil', null=True, upload_to='users/cover_photos')),
                ('address', models.CharField(blank=True, help_text='Endereço principal do usuário', max_length=250, null=True)),
                ('country', models.CharField(blank=True, help_text='País do usuário', max_length=15, null=True)),
                ('state', models.CharField(blank=True, help_text='Estado do usuário', max_length=15, null=True)),
                ('city', models.CharField(blank=True, help_text='Cidade do usuário', max_length=15, null=True)),
                ('postal_code', models.CharField(blank=True, help_text='CEP do usuário', max_length=10, null=True)),
                ('latitude', models.CharField(blank=True, help_text='Latitude da localização do usuário', max_length=20, null=True)),
                ('longitude', models.CharField(blank=True, help_text='Longitude da localização do usuário', max_length=20, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Data de criação do perfil')),
                ('modified_at', models.DateTimeField(auto_now=True, help_text='Data da última modificação do perfil')),
                ('user', models.OneToOneField(help_text='Usuário associado a este perfil', on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
